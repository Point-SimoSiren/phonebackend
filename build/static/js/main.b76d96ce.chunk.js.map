{"version":3,"sources":["components/PersonForm.js","components/FilterForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["PersonForm","addContact","newNumber","newName","handleNameInputChange","handleNumberInputChange","onSubmit","style","color","value","onChange","type","FilterForm","search","handleSearchInputChange","Persons","persons","handleDeleteClick","handleUpdateClick","map","person","name","toLowerCase","indexOf","key","id","width","onClick","number","baseUrl","getAll","a","req","axios","get","then","res","data","create","newContact","post","update","changedContact","put","remove","delete","Notification","message","isPositive","className","App","useState","setPersons","setNewName","setNewNumber","setSearch","errorMessage","setErrorMessage","setIsPositive","useEffect","personService","initialPersons","event","preventDefault","contactObject","find","window","confirm","setTimeout","catch","error","response","concat","target","personToRemove","promise","filter","filtered","status","location","reload","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mPAqBeA,EAjBI,SAAC,GAAwF,IAAtFC,EAAqF,EAArFA,WAAYC,EAAyE,EAAzEA,UAAWC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,sBAAuBC,EAA8B,EAA9BA,wBACzE,OAEI,0BAAMC,SAAUL,GACZ,yBAAKM,MAAO,CAAEC,MAAO,SAArB,SACU,0CADV,IACoC,2BAAOC,MAAON,EAASO,SAAUN,KAErE,yBAAKG,MAAO,CAAEC,MAAO,SAArB,WACY,2BAAOC,MAAOP,EAAWQ,SAAUL,KAE/C,6BACI,4BAAQM,KAAK,UAAb,UCLDC,EAPI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,wBAC1B,OACI,yBAAKP,MAAO,CAAEC,MAAO,SAArB,WACY,2BAAOC,MAAOI,EAAQH,SAAUI,MCcrCC,EAlBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASH,EAAZ,EAAYA,OAAQI,EAApB,EAAoBA,kBAApB,EAAuCC,kBAAvC,OAA+DF,EAAQG,KAAI,SAAAC,GAKvF,OADuBA,EAAOC,KAAKC,cACbC,QAAQV,IAAW,EACrC,2BAAOW,IAAKJ,EAAOK,IACf,+BACI,4BACI,wBAAIlB,MAAO,CAAEmB,MAAO,UAAW,4BAAQnB,MAAO,CAAEmB,MAAO,QACnDC,QAAS,kBAAMV,EAAkBG,EAAOK,MADb,WAE/B,wBAAIlB,MAAO,CAAEmB,MAAO,UAAYN,EAAOC,KAAvC,IAA6C,uCAC7C,wBAAId,MAAO,CAAEmB,MAAO,UAAYN,EAAOQ,WAInD,S,uCCjBFC,EAAU,eAmBD,GACXC,OAlBQ,uCAAG,4BAAAC,EAAA,6DACLC,EAAMC,IAAMC,IAAIL,GADX,kBAEJG,EAAIG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAFhB,2CAAH,qDAmBRC,OAdW,SAAAC,GACX,OAAON,IAAMO,KAAKX,EAASU,IAc3BE,OAXQ,uCAAG,WAAOhB,EAAIiB,GAAX,iBAAAX,EAAA,6DACLC,EAAMC,IAAMU,IAAN,UAAad,EAAb,YAAwBJ,GAAMiB,GAD/B,SAEOV,EAFP,cAELI,EAFK,yBAGJA,EAAIC,MAHA,2CAAH,wDAYRO,OANW,SAAAnB,GAAE,OAAIQ,IAAMY,OAAN,UAAgBhB,EAAhB,YAA2BJ,MCGjCqB,EAnBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC7B,OAAgB,OAAZD,EACO,MAEa,IAAfC,EAED,yBAAKC,UAAU,WACVF,GAML,yBAAKE,UAAU,SACVF,I,8NCTjB,IAuJeG,EAvJH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTnC,EADS,KACAoC,EADA,OAEcD,mBAAS,IAFvB,mBAEThD,EAFS,KAEAkD,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTjD,EAHS,KAGEoD,EAHF,OAIYH,mBAAS,IAJrB,mBAITtC,EAJS,KAID0C,EAJC,OAKwBJ,mBAAS,MALjC,mBAKTK,EALS,KAKKC,EALL,OAMoBN,oBAAS,GAN7B,mBAMTH,EANS,KAMGU,EANH,KAYhBC,qBAAU,WACRC,EACG9B,SACAK,MAAK,SAAA0B,GACJT,EAAWS,QAEd,IAoHH,OACE,6BACE,yCACA,kBAAC,EAAD,CAAY5D,WA1EG,SAAC6D,GAClBA,EAAMC,iBACN,IAAMC,EAAgB,CACpB3C,KAAMlB,EACNyB,OAAQ1B,GAEJkB,EAASJ,EAAQiD,MAAK,SAAA7C,GAAM,OAAIA,EAAOC,KAAKC,gBAAkBnB,EAAQmB,iBACtEoB,E,yVAAc,IAAQtB,EAAR,CAAgBQ,OAAQ1B,IAExCkB,EAEE8C,OAAOC,QAAP,oBAA4BhE,EAA5B,6EAEFyD,EACGnB,OAAOrB,EAAOK,GAAIiB,GAClBP,MAAK,SAAAC,GACJgB,EAAWpC,EAAQG,KAAI,SAAAC,GAAM,OAAIA,EAAOK,KAAOW,EAAIX,GAAKL,EAASgB,MACjEsB,GAAc,GACdD,EAAgB,cAAD,OACCO,EAAc3C,KADf,mBAGf+C,YAAW,WACTX,EAAgB,QACf,QAIJY,OAAM,SAAAC,GACLZ,GAAc,GACdD,EAAgB,GAAD,OACVO,EAAc3C,KADJ,oHAIf+C,YAAW,WACTX,EAAgB,QACf,QAOTG,EACGtB,OAAO0B,GACP7B,MAAK,SAAAoC,GACJnB,EAAWpC,EAAQwD,OAAOD,EAASlC,OACnCqB,GAAc,GACdD,EAAgB,eAAD,OACEO,EAAc3C,KADhB,4BAGf+C,YAAW,WACTX,EAAgB,QACf,QAEJY,OAAM,SAAAC,GACLZ,GAAc,GACdD,EAAgB,YAAD,OACDO,EAAc3C,KADb,wDAGf+C,YAAW,WACTX,EAAgB,QACf,QAKTJ,EAAW,IACXC,EAAa,KAOyBnD,QAASA,EAASD,UAAWA,EAAWE,sBArHlD,SAAC0D,GAC7BT,EAAWS,EAAMW,OAAOhE,QAoHoGJ,wBAjH9F,SAACyD,GAC/BR,EAAaQ,EAAMW,OAAOhE,UAkHxB,uCACA,kBAAC,EAAD,CAAcsC,QAASS,EAAcR,WAAYA,IAEjD,kBAAC,EAAD,CAAYnC,OAAQA,EAAQC,wBAlHA,SAACgD,GAC/BP,EAAUO,EAAMW,OAAOhE,UAmHrB,kBAAC,EAAD,CAASO,QAASA,EAASH,OAAQA,EACjCI,kBAjHoB,SAAAQ,GACxB,IAAMiD,EAAiB1D,EAAQiD,MAAK,SAAA7C,GAAM,OAAIA,EAAOK,KAAOA,KACxDyC,OAAOC,QAAP,2BAAmCO,EAAerD,KAAlD,sBACFuC,EACGhB,OAAOnB,GACPU,MAAK,SAAAwC,GACJvB,EAAWpC,EAAQ4D,QAAO,SAAAC,GAAQ,OAAIA,EAASpD,KAAOA,MAC/B,MAAnBkD,EAAQG,SACVpB,GAAc,GACdD,EAAgB,GAAD,OAAIiB,EAAerD,KAAnB,oCACf+C,YAAW,WACTX,EAAgB,QACf,SAGNY,OAAM,SAAAC,GACLZ,GAAc,GACdD,EAAgB,GAAD,OACViB,EAAerD,KADL,iEAGf+C,YAAW,WACTX,EAAgB,QACf,KAGHS,OAAOa,SAASC,iBCpDNC,QACW,cAA7Bf,OAAOa,SAASG,UAEe,UAA7BhB,OAAOa,SAASG,UAEhBhB,OAAOa,SAASG,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvD,MAAK,SAAAwD,GACjCA,EAAaC,kB","file":"static/js/main.b76d96ce.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// Used for adding new persons\r\n\r\nconst PersonForm = ({ addContact, newNumber, newName, handleNameInputChange, handleNumberInputChange }) => {\r\n    return (\r\n\r\n        <form onSubmit={addContact}>\r\n            <div style={{ color: 'blue' }}>\r\n                name: <span>&nbsp;&nbsp;</span> <input value={newName} onChange={handleNameInputChange} />\r\n            </div>\r\n            <div style={{ color: 'blue' }}>\r\n                number: <input value={newNumber} onChange={handleNumberInputChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n//Used for showing search field for filterig persons to show\r\n\r\nconst FilterForm = ({ search, handleSearchInputChange }) => {\r\n    return (\r\n        <div style={{ color: 'blue' }}>\r\n            search: <input value={search} onChange={handleSearchInputChange} />\r\n        </div>\r\n    )\r\n}\r\nexport default FilterForm","import React from 'react'\r\n\r\nconst Persons = ({ persons, search, handleDeleteClick, handleUpdateClick }) => persons.map(person => {\r\n\r\n    //Jos laittaa person.name[0] , niin hakee vain ensimmäistä kirjainta\r\n    //mutta tämä on paljon parempi hakutapa.\r\n    const caseInsensName = person.name.toLowerCase()\r\n    return caseInsensName.indexOf(search) > -1 ? (\r\n        <table key={person.id}>\r\n            <tbody>\r\n                <tr>\r\n                    <td style={{ width: '100px' }}><button style={{ width: '80px' }}\r\n                        onClick={() => handleDeleteClick(person.id)}>Delete</button></td>\r\n                    <td style={{ width: '200px' }}>{person.name} <span>&nbsp;</span></td>\r\n                    <td style={{ width: '150px' }}>{person.number}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    ) : null\r\n})\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = async () => {\r\n    const req = axios.get(baseUrl)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst create = newContact => {\r\n    return axios.post(baseUrl, newContact)\r\n}\r\n\r\nconst update = async (id, changedContact) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, changedContact)\r\n    const res = await req\r\n    return res.data\r\n}\r\n\r\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message, isPositive }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    else if (isPositive === true) {\r\n        return (\r\n            <div className=\"success\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport FilterForm from './components/FilterForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [isPositive, setIsPositive] = useState(true)\n\n  //Error message statea käytetään tässä sekä positiiviseen että\n  //negatiiviseen viestiin, isPositive boolean vaihtaa tyyliä\n  //Joko vihreään tai punaiseen.\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameInputChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberInputChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchInputChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleDeleteClick = id => {\n    const personToRemove = persons.find(person => person.id === id)\n    if (window.confirm(`Removing contact ${personToRemove.name}. Are you sure? `)) {\n      personService\n        .remove(id)\n        .then(promise => {\n          setPersons(persons.filter(filtered => filtered.id !== id))\n          if (promise.status === 200) {\n            setIsPositive(true)\n            setErrorMessage(`${personToRemove.name} was deleted from the database.`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 6000)\n          }\n        })\n        .catch(error => {\n          setIsPositive(false)\n          setErrorMessage(\n            `${personToRemove.name} may not have been deleted due unexpected error. Pls. check.`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 6000)\n          //Koitetaan vielä ravistella sovellusta,\n          //tai ainakin päivittää se ajantasalle sivun uudelleenlataamisella.\n          window.location.reload()\n        })\n    }\n  }\n\n  //------ ADD ---------------------\n  const addContact = (event) => {\n    event.preventDefault()\n    const contactObject = {\n      name: newName,\n      number: newNumber\n    }\n    const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n    const changedContact = { ...person, number: newNumber }\n\n    if (person) {\n      //NIMI ON JO OLEMASSA...\n      if (window.confirm(`NOTICE!\\n ${newName} already exists.\\n\n      Want to permanently overwrite the old number?`)) {\n        personService\n          .update(person.id, changedContact)\n          .then(res => {\n            setPersons(persons.map(person => person.id !== res.id ? person : res))\n            setIsPositive(true)\n            setErrorMessage(\n              `Number of '${contactObject.name}' was updated!`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 6000)\n          })\n\n\n          .catch(error => {\n            setIsPositive(false)\n            setErrorMessage(\n              `${contactObject.name}' has been deleted just before you tried to update it.\\r\n              Maybe by some other user of the system.`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 8000)\n\n          })\n      }\n    }\n    else {\n      //UUSI NIMI\n      personService\n        .create(contactObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setIsPositive(true)\n          setErrorMessage(\n            `New contact ${contactObject.name} was succesfully saved!`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setIsPositive(false)\n          setErrorMessage(\n            `Contact '${contactObject.name}' was not added to the server due unexpected error.`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 6000)\n\n        })\n    }\n    //Lopuksi kaikissa tapauksissa tehdään.\n    setNewName('')\n    setNewNumber('')\n  }\n\n  /// RUUDULLE RENDEÖITÄVÄ KOMPONENTTIEN KOKOELMA ///\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <PersonForm addContact={addContact} newName={newName} newNumber={newNumber} handleNameInputChange={handleNameInputChange} handleNumberInputChange={handleNumberInputChange} />\n\n      <h2>Numbers</h2>\n      <Notification message={errorMessage} isPositive={isPositive} />\n\n      <FilterForm search={search} handleSearchInputChange={handleSearchInputChange} />\n\n      <Persons persons={persons} search={search}\n        handleDeleteClick={handleDeleteClick} />\n\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}